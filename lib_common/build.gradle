apply plugin: 'com.android.library'

//apply plugin: 'android-apt'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resourcePrefix"common_"

        // Enabling multidex support.
        multiDexEnabled true
    }

    buildTypes {
        debug {
            buildConfigField("String", "FilePath", '"TBLiveDebugFilePath"')
//            resourcePrefix"common_"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "FilePath", '"TBLiveDebugFilePath"')
//            resourcePrefix"common_"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["constraint"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["design"]

    //rx
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxpermissions"]

    //network
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["okhttp-logging-interceptor"]
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api rootProject.ext.dependencies["glide-okhttp3-integration"]
    api rootProject.ext.dependencies["jsoup"]

    //di
    api rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    implementation rootProject.ext.dependencies["annotation"]

    //other
    api rootProject.ext.dependencies["logger"]
    // swipeback基于fragmentation, 如果是自定制SupportActivity/Fragment，则参照SwipeBackActivity/Fragment实现即可
    api rootProject.ext.dependencies["fragmentation"]
    api rootProject.ext.dependencies["fragmentation-swipeback"]
    api rootProject.ext.dependencies["joda"]
    api rootProject.ext.dependencies["baseRecyclerViewAdapterHelper"]
    api rootProject.ext.dependencies["multidex"]

    //canary
    debugApi rootProject.ext.dependencies["blockcanary-android"]
    releaseImplementation rootProject.ext.dependencies["blockcanary-no-op"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    debugImplementation rootProject.ext.dependencies["leakcanary-support-fragment"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]

}
